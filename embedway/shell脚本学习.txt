

1、将制定目录下的文件导入到当前脚本
	> . /home/filename  （其中filename中一般定义脚本的变量）
	
2、获取某个字符串的前几个字符
	> str1="abcdefg"
	> ${str1:0:3}   #选择str1的前三个字符即 "abc"
	
	判断字符串是否包含某个字符串
	str1="abcdefgh"
	str2="def"
	result=$(echo $str1 | grep "${str2}")
	if [[ "$result" != "" ]]
	then
		echo "包含"
	else
		echo "不包含"
	fi
	

3、if的一些判断条件 
	文件表达式
	if [ -f  file ]    如果文件存在
	if [ -d ...   ]    如果目录存在
	if [ -s file  ]    如果文件存在且非空 
	if [ -r file  ]    如果文件存在且可读
	if [ -w file  ]    如果文件存在且可写
	if [ -x file  ]    如果文件存在且可执行   

	整数变量表达式
	if [ int1 -eq int2 ]    如果int1等于int2   
	if [ int1 -ne int2 ]    如果不等于    
	if [ int1 -ge int2 ]       如果>=
	if [ int1 -gt int2 ]       如果>
	if [ int1 -le int2 ]       如果<=
	if [ int1 -lt int2 ]       如果<

	   字符串变量表达式
	If  [ $a = $b ]                 如果string1等于string2
									字符串允许使用赋值号做等号
	if  [ $string1 !=  $string2 ]   如果string1不等于string2       
	if  [ -n $string  ]             如果string 非空(非0），返回0(true)  
	if  [ -z $string  ]             如果string 为空
	if  [ $sting ]                  如果string 非空，返回0 (和-n类似)    
	
	注意：中括号后面一定要加空格。
	
4、if多组条件判断
	> if [ 条件表达式1 ] || [ 条件表达式2 ]  
	> if [ 条件表达式1 ] && [ 条件表达式2 ]  
	
5、if的使用格式
	if [ 条件表达式1 ];then    
		command1
		command2
	elif [ 条件表达式2 ];then
		command3
		command4
	else
		command5
		command6
	fi
	
6、替换某一文件的内容(重点)
	sed -i "s/old_string/new_string/g" '/home/filename'


